Index: app/src/main/java/com/example/app_anima/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.app_anima;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.bluetooth.BluetoothAdapter;\r\nimport android.bluetooth.BluetoothDevice;\r\nimport android.bluetooth.BluetoothSocket;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\n\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.List;\r\nimport java.util.Set;\r\nimport java.util.UUID;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n    private FragmentManager fragmentManager = getSupportFragmentManager();\r\n    private FragmentHome fragmentHome = new FragmentHome();\r\n    private FragmentMemo fragmentMemo = new FragmentMemo();\r\n    private FragmentMagazin fragmentMagazin = new FragmentMagazin();\r\n\r\n    private static final int REQUEST_ENABLE_BT = 10; // 블루투스 활성화 상태\r\n    private BluetoothAdapter bluetoothAdapter; // 블루투스 어댑터\r\n    private Set<BluetoothDevice> devices; // 블루투스 디바이스 데이터 셋\r\n    private BluetoothDevice bluetoothDevice; // 블루투스 디바이스\r\n    private BluetoothSocket bluetoothSocket = null; // 블루투스 소켓\r\n    private InputStream inputStream = null; // 블루투스에 데이터를 입력하기 위한 입력 스트림\r\n    private Thread workerThread = null; // 문자열 수신에 사용되는 쓰레드\r\n    private byte[] readBuffer; // 수신 된 문자열을 저장하기 위한 버퍼\r\n    private int readBufferPosition; // 버퍼 내 문자 저장 위치\r\n\r\n    private boolean stop;\r\n    private int tempCnt, run_step, walk_step, rest_time;\r\n    private float tempSum;\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        switch (requestCode) {\r\n            case REQUEST_ENABLE_BT:\r\n                if (requestCode == RESULT_OK) { // '사용'을 눌렀을 때\r\n                    selectBluetoothDevice(); // 블루투스 디바이스 선택 함수 호출\r\n                } else { // '취소'를 눌렀을 때\r\n                    // 여기에 처리 할 코드를 작성하세요.\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        FragmentTransaction transaction = fragmentManager.beginTransaction();\r\n        transaction.replace(R.id.frameLayout, fragmentHome).commitAllowingStateLoss();\r\n        BottomNavigationView bottomNavigationView = findViewById(R.id.navigationView);\r\n        bottomNavigationView.setOnNavigationItemSelectedListener(new ItemSelectedListener());\r\n\r\n\r\n        // 블루투스 활성화하기\r\n\r\n        bluetoothAdapter = BluetoothAdapter.getDefaultAdapter(); // 블루투스 어댑터를 디폴트 어댑터로 설정\r\n        if (bluetoothAdapter == null) { // 디바이스가 블루투스를 지원하지 않을 때\r\n            System.out.println(\"해당 기기에서 지원하지 않습니다. \");\r\n        } else { // 디바이스가 블루투스를 지원 할 때\r\n            if (bluetoothAdapter.isEnabled()) { // 블루투스가 활성화 상태 (기기에 블루투스가 켜져있음)\r\n                selectBluetoothDevice(); // 블루투스 디바이스 선택 함수 호출\r\n            } else { // 블루투스가 비 활성화 상태 (기기에 블루투스가 꺼져있음)\r\n                // 블루투스를 활성화 하기 위한 다이얼로그 출력\r\n                Intent intent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);\r\n                // 선택한 값이 onActivityResult 함수에서 콜백된다.\r\n                startActivityForResult(intent, REQUEST_ENABLE_BT);\r\n            }\r\n        }\r\n\r\n        Calendar cal = Calendar.getInstance();\r\n        int nWeek = cal.get(Calendar.DAY_OF_WEEK);\r\n        if (PreferenceManager.getInt(this, \"nweek\") != nWeek) {\r\n            PreferenceManager.setInt(this, \"water_count\", 0);\r\n            PreferenceManager.setInt(this, \"run_step\", 0);\r\n            PreferenceManager.setInt(this, \"walk_step\", 0);\r\n            PreferenceManager.setInt(this, \"rest_time\", 0);\r\n            PreferenceManager.setInt(this, \"nweek\", nWeek);\r\n        }\r\n\r\n        run_step = PreferenceManager.getInt(this, \"run_step\");\r\n        walk_step = PreferenceManager.getInt(this, \"walk_step\");\r\n        rest_time = PreferenceManager.getInt(this, \"rest_time\");\r\n\r\n    }\r\n\r\n    public void selectBluetoothDevice() {\r\n\r\n        // 이미 페어링 되어있는 블루투스 기기를 찾습니다.\r\n        devices = bluetoothAdapter.getBondedDevices();\r\n        // 페어링 된 디바이스의 크기를 저장\r\n        int pariedDeviceCount = devices.size();\r\n        // 페어링 되어있는 장치가 없는 경우\r\n        if (pariedDeviceCount == 0) {\r\n            // 페어링을 하기위한 함수 호출\r\n            System.out.println(\"페어링 할 기기가 필요합니다.\");\r\n        }\r\n        // 페어링 되어있는 장치가 있는 경우\r\n        else {\r\n            // 디바이스를 선택하기 위한 다이얼로그 생성\r\n            AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n            builder.setTitle(\"페어링 되어있는 블루투스 디바이스 목록\");\r\n            // 페어링 된 각각의 디바이스의 이름과 주소를 저장\r\n            List<String> list = new ArrayList<>();\r\n            // 모든 디바이스의 이름을 리스트에 추가\r\n            for (BluetoothDevice bluetoothDevice : devices) {\r\n                list.add(bluetoothDevice.getName());\r\n            }\r\n            list.add(\"취소\");\r\n            // List를 CharSequence 배열로 변경\r\n            final CharSequence[] charSequences = list.toArray(new CharSequence[list.size()]);\r\n            list.toArray(new CharSequence[list.size()]);\r\n            // 해당 아이템을 눌렀을 때 호출 되는 이벤트 리스너\r\n            builder.setItems(charSequences, new DialogInterface.OnClickListener() {\r\n                @Override\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    // 해당 디바이스와 연결하는 함수 호출\r\n                    connectDevice(charSequences[which].toString());\r\n                }\r\n            });\r\n            // 뒤로가기 버튼 누를 때 창이 안닫히도록 설정\r\n            builder.setCancelable(false);\r\n            // 다이얼로그 생성\r\n            AlertDialog alertDialog = builder.create();\r\n            alertDialog.show();\r\n        }\r\n    }\r\n\r\n    public void connectDevice(String deviceName) {\r\n        // 페어링 된 디바이스들을 모두 탐색\r\n        for (BluetoothDevice tempDevice : devices) {\r\n            // 사용자가 선택한 이름과 같은 디바이스로 설정하고 반복문 종료\r\n            if (deviceName.equals(tempDevice.getName())) {\r\n                bluetoothDevice = tempDevice;\r\n                break;\r\n            }\r\n        }\r\n        // UUID 생성\r\n        UUID uuid = java.util.UUID.fromString(\"00001101-0000-1000-8000-00805f9b34fb\");\r\n        // Rfcomm 채널을 통해 블루투스 디바이스와 통신하는 소켓 생성\r\n        try {\r\n            bluetoothSocket = bluetoothDevice.createRfcommSocketToServiceRecord(uuid);\r\n            bluetoothSocket.connect();\r\n            // 데이터 송,수신 스트림을 얻어옵니다.\r\n            inputStream = bluetoothSocket.getInputStream();\r\n            // 데이터 수신 함수 호출\r\n            receiveData();\r\n        } catch (IOException e) {\r\n            Toast.makeText(getApplicationContext(), \"블루투스 연결 중 오류가 발생했습니다.\", Toast.LENGTH_LONG).show();\r\n            finish();  // App 종료\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void receiveData() {\r\n        final Fragment fragment = getSupportFragmentManager().findFragmentById(R.id.frameLayout);\r\n        final Handler handler = new Handler();\r\n        // 데이터를 수신하기 위한 버퍼를 생성\r\n        readBufferPosition = 0;\r\n        readBuffer = new byte[1024];\r\n\r\n        // 데이터를 수신하기 위한 쓰레드 생성\r\n        workerThread = new Thread(new Runnable() {\r\n            @RequiresApi(api = Build.VERSION_CODES.KITKAT)\r\n            @Override\r\n            public void run() {\r\n                while (!Thread.currentThread().isInterrupted()) {\r\n                    try {\r\n                        // 데이터 수신 확인\r\n                        int byteAvailable = inputStream.available();\r\n                        // 데이터가 수신 된 경우\r\n                        if (byteAvailable > 0) {\r\n                            // 입력 스트림에서 바이트 단위로 읽어오기\r\n                            byte[] bytes = new byte[byteAvailable];\r\n                            inputStream.read(bytes);\r\n                            // 입력 스트림 바이트를 한 바이트씩 읽어오기\r\n                            for (int i = 0; i < byteAvailable; i++) {\r\n                                byte tempByte = bytes[i];\r\n                                // 개행문자를 기준으로 받음(한줄)\r\n                                if (tempByte == '\\n') {\r\n                                    // readBuffer 배열을 encodedBytes로 복사\r\n                                    byte[] encodedBytes = new byte[readBufferPosition];\r\n                                    System.arraycopy(readBuffer, 0, encodedBytes, 0, encodedBytes.length);\r\n                                    // 인코딩 된 바이트 배열을 문자열로 변환\r\n                                    final String text = new String(encodedBytes, StandardCharsets.US_ASCII);\r\n                                    readBufferPosition = 0;\r\n                                    handler.post(new Runnable() {\r\n                                        @Override\r\n                                        public void run() {\r\n                                            Log.d(\"받아온 데이터\", text);\r\n                                            String[] data = text.split(\"=\");\r\n                                            switch (data[0]) {\r\n                                                case \"T\":\r\n                                                    setTemperature(data[1]);\r\n                                                    break;\r\n                                                case \"A\":\r\n                                                    setDogLiskDialog(data[1]);\r\n                                                    break;\r\n                                                case \"P\":\r\n                                                    setHeartRate(data[1]);\r\n                                                    break;\r\n                                                case \"V\":\r\n                                                    setStep(data[1]);\r\n                                                    break;\r\n                                            }\r\n                                            if (!stop) ((FragmentHome) fragment).settingData();\r\n                                        }\r\n                                    });\r\n\r\n                                } // 개행 문자가 아닐 경우\r\n                                else {\r\n                                    readBuffer[readBufferPosition++] = tempByte;\r\n                                }\r\n                            }\r\n                        }\r\n                    } catch (IOException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                    try {\r\n                        // 1초마다 받아옴\r\n                        Thread.sleep(1000);\r\n                    } catch (InterruptedException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        workerThread.start();\r\n    }\r\n\r\n    public void setTemperature(String data) {\r\n        String[] temp = data.split(\"��C\");\r\n        tempSum += Float.parseFloat(temp[0]);\r\n        tempCnt++;\r\n        if (tempCnt == 5) {\r\n            System.out.println(\"tempCnt\" + tempCnt);\r\n            PreferenceManager.setFloat(this, \"Temperature\", (float) (Math.round((tempSum) * 20) / 100.0));\r\n            tempSum = 0;\r\n            tempCnt = 0;\r\n        }\r\n    }\r\n\r\n    public void setDogLiskDialog(String data) {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        String[] A = data.split(\",\");\r\n        float a_x = Float.parseFloat(A[0]);\r\n        float a_x1 = PreferenceManager.getFloat(this, \"AX\");\r\n        if (a_x1 == 0.0) a_x1 = a_x;\r\n        PreferenceManager.setFloat(this, \"AX\", a_x);\r\n        if (Math.abs(a_x - a_x1) > 200) {\r\n            builder.setTitle(\"반려견의 상태를 확인해주세요!\")        // 제목 설정\r\n                    .setMessage(\"다리를 확인해주세요! \")        // 메세지 설정\r\n                    .setCancelable(false)        // 뒤로 버튼 클릭시 취소 가능 설정\r\n                    .setPositiveButton(\"확인\", new DialogInterface.OnClickListener() {\r\n                        // 확인 버튼 클릭시 설정\r\n                        public void onClick(DialogInterface dialog, int whichButton) {\r\n                            dialog.cancel();\r\n                        }\r\n                    });\r\n            AlertDialog dialog = builder.create();    // 알림창 객체 생성\r\n            dialog.show();    // 알림창 띄우기\r\n        }\r\n    }\r\n\r\n    public void setHeartRate(String data) {\r\n        PreferenceManager.setString(this, \"bpm\", data);\r\n    }\r\n\r\n    public void setStep(String data) {\r\n        String[] V = data.split(\",\");\r\n        int minus = 0, stepCnt = 0, plus = 0;\r\n        boolean isRunning = false;\r\n        for (String s : V) {\r\n            if (Float.parseFloat(s) < 7) {\r\n                if (Float.parseFloat(s) < 0) minus++;\r\n                stepCnt++;\r\n            }\r\n            else plus++;\r\n            if (Float.parseFloat(s) < 3) { // 뛰기\r\n                System.out.println(\"뛴다\");\r\n                isRunning = true;\r\n            }\r\n        }\r\n        System.out.println(minus);\r\n        if (minus < 8) {\r\n            if (isRunning) {\r\n                run_step += stepCnt;\r\n                System.out.println(\"run_step \"+run_step);\r\n                PreferenceManager.setInt(this, \"run_step\", run_step);\r\n            } else {\r\n                walk_step += stepCnt;\r\n                PreferenceManager.setInt(this, \"walk_step\", walk_step);\r\n            }\r\n        }\r\n        if (plus == 10) {\r\n            rest_time += 1;\r\n            PreferenceManager.setInt(this, \"rest_time\", rest_time);\r\n        }\r\n    }\r\n\r\n    class ItemSelectedListener implements BottomNavigationView.OnNavigationItemSelectedListener {\r\n        @Override\r\n        public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {\r\n            FragmentTransaction transaction = fragmentManager.beginTransaction();\r\n            switch (menuItem.getItemId()) {\r\n                case R.id.home:\r\n                    stop = false;\r\n                    transaction.replace(R.id.frameLayout, fragmentHome).commitAllowingStateLoss();\r\n                    break;\r\n                case R.id.memo:\r\n                    stop = true;\r\n                    transaction.replace(R.id.frameLayout, fragmentMemo).commitAllowingStateLoss();\r\n                    break;\r\n                case R.id.magazin:\r\n                    stop = true;\r\n                    transaction.replace(R.id.frameLayout, fragmentMagazin).commitAllowingStateLoss();\r\n                    break;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/app_anima/MainActivity.java	(revision 8b50730a5613980e24d3e291b7ca74d91d2a3963)
+++ app/src/main/java/com/example/app_anima/MainActivity.java	(date 1611617024737)
@@ -9,6 +9,7 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.os.Handler;
+import android.provider.Settings;
 import android.util.Log;
 import android.view.MenuItem;
 import android.widget.Toast;
@@ -26,9 +27,7 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.nio.charset.StandardCharsets;
-import java.util.ArrayList;
 import java.util.Calendar;
-import java.util.List;
 import java.util.Set;
 import java.util.UUID;
 
@@ -67,17 +66,9 @@
     }
 
     @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_main);
-        FragmentTransaction transaction = fragmentManager.beginTransaction();
-        transaction.replace(R.id.frameLayout, fragmentHome).commitAllowingStateLoss();
-        BottomNavigationView bottomNavigationView = findViewById(R.id.navigationView);
-        bottomNavigationView.setOnNavigationItemSelectedListener(new ItemSelectedListener());
-
-
+    protected void onResume() {
+        super.onResume();
         // 블루투스 활성화하기
-
         bluetoothAdapter = BluetoothAdapter.getDefaultAdapter(); // 블루투스 어댑터를 디폴트 어댑터로 설정
         if (bluetoothAdapter == null) { // 디바이스가 블루투스를 지원하지 않을 때
             System.out.println("해당 기기에서 지원하지 않습니다. ");
@@ -91,6 +82,17 @@
                 startActivityForResult(intent, REQUEST_ENABLE_BT);
             }
         }
+    }
+
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_main);
+        FragmentTransaction transaction = fragmentManager.beginTransaction();
+        transaction.replace(R.id.frameLayout, fragmentHome).commitAllowingStateLoss();
+        BottomNavigationView bottomNavigationView = findViewById(R.id.navigationView);
+        bottomNavigationView.setOnNavigationItemSelectedListener(new ItemSelectedListener());
 
         Calendar cal = Calendar.getInstance();
         int nWeek = cal.get(Calendar.DAY_OF_WEEK);
@@ -117,36 +119,11 @@
         // 페어링 되어있는 장치가 없는 경우
         if (pariedDeviceCount == 0) {
             // 페어링을 하기위한 함수 호출
-            System.out.println("페어링 할 기기가 필요합니다.");
+            setBluetooth("기기를 먼저 연결해주세요.");
         }
         // 페어링 되어있는 장치가 있는 경우
         else {
-            // 디바이스를 선택하기 위한 다이얼로그 생성
-            AlertDialog.Builder builder = new AlertDialog.Builder(this);
-            builder.setTitle("페어링 되어있는 블루투스 디바이스 목록");
-            // 페어링 된 각각의 디바이스의 이름과 주소를 저장
-            List<String> list = new ArrayList<>();
-            // 모든 디바이스의 이름을 리스트에 추가
-            for (BluetoothDevice bluetoothDevice : devices) {
-                list.add(bluetoothDevice.getName());
-            }
-            list.add("취소");
-            // List를 CharSequence 배열로 변경
-            final CharSequence[] charSequences = list.toArray(new CharSequence[list.size()]);
-            list.toArray(new CharSequence[list.size()]);
-            // 해당 아이템을 눌렀을 때 호출 되는 이벤트 리스너
-            builder.setItems(charSequences, new DialogInterface.OnClickListener() {
-                @Override
-                public void onClick(DialogInterface dialog, int which) {
-                    // 해당 디바이스와 연결하는 함수 호출
-                    connectDevice(charSequences[which].toString());
-                }
-            });
-            // 뒤로가기 버튼 누를 때 창이 안닫히도록 설정
-            builder.setCancelable(false);
-            // 다이얼로그 생성
-            AlertDialog alertDialog = builder.create();
-            alertDialog.show();
+            connectDevice("BT04-A");
         }
     }
 
@@ -169,6 +146,7 @@
             inputStream = bluetoothSocket.getInputStream();
             // 데이터 수신 함수 호출
             receiveData();
+            Toast.makeText(getApplicationContext(), "기기가 연결되었습니다.", Toast.LENGTH_LONG).show();
         } catch (IOException e) {
             Toast.makeText(getApplicationContext(), "블루투스 연결 중 오류가 발생했습니다.", Toast.LENGTH_LONG).show();
             finish();  // App 종료
@@ -252,6 +230,27 @@
         workerThread.start();
     }
 
+    public void setBluetooth(String bluetoothMessage) {
+        // 디바이스를 선택하기 위한 다이얼로그 생성
+        AlertDialog.Builder builder = new AlertDialog.Builder(this);
+        builder.setTitle(bluetoothMessage)        // 제목 설정
+                .setCancelable(false)        // 뒤로 버튼 클릭시 취소 가능 설정
+                .setPositiveButton("확인", new DialogInterface.OnClickListener() {
+                    // 확인 버튼 클릭시 설정
+                    public void onClick(DialogInterface dialog, int whichButton) {
+                        Intent intent = new Intent(Settings.ACTION_BLUETOOTH_SETTINGS);
+                        startActivityForResult(intent, 0);
+                    }
+                })
+                .setNegativeButton("앱 종료", new DialogInterface.OnClickListener() {
+                    public void onClick(DialogInterface dialog, int whichButton) {
+                        finish();
+                    }
+                });
+        AlertDialog dialog = builder.create();    // 알림창 객체 생성
+        dialog.show();    // 알림창 띄우기
+    }
+
     public void setTemperature(String data) {
         String[] temp = data.split("��C");
         tempSum += Float.parseFloat(temp[0]);
@@ -298,8 +297,7 @@
             if (Float.parseFloat(s) < 7) {
                 if (Float.parseFloat(s) < 0) minus++;
                 stepCnt++;
-            }
-            else plus++;
+            } else plus++;
             if (Float.parseFloat(s) < 3) { // 뛰기
                 System.out.println("뛴다");
                 isRunning = true;
@@ -309,7 +307,7 @@
         if (minus < 8) {
             if (isRunning) {
                 run_step += stepCnt;
-                System.out.println("run_step "+run_step);
+                System.out.println("run_step " + run_step);
                 PreferenceManager.setInt(this, "run_step", run_step);
             } else {
                 walk_step += stepCnt;
Index: app/src/main/java/com/example/app_anima/FragmentHome.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.app_anima;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlertDialog;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.View.OnClickListener;\r\nimport android.view.ViewGroup;\r\nimport android.view.ViewTreeObserver;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ListView;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\nimport android.widget.ScrollView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.IdRes;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.constraintlayout.widget.ConstraintLayout;\r\nimport androidx.core.content.res.ResourcesCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.viewpager.widget.ViewPager;\r\n\r\nimport com.dinuscxj.progressbar.CircleProgressBar;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\n\r\npublic class FragmentHome extends Fragment {\r\n\r\n    private TextView tv_calorie, tv_menu, tv_water, tv_temp, tv_bpm, tv_go_jog, tv_run_step, tv_walk_step, tv_rest_time;\r\n    private ListView listView;\r\n    private ScrollView scrollView;\r\n\r\n    private LinearLayout appbar, vp_layout, parent_layout;\r\n    private ConstraintLayout dog_running_time;\r\n    private DrawerLayout drawer_ad;\r\n\r\n    private ImageButton btn_menu, btn_feedinput, circle_add, circle_minus;\r\n\r\n    private final View[] dogContent = new View[8];\r\n    private final String[] dogContentID = {\"running_time\", \"food\", \"sleep\", \"weight\", \"heart\", \"stress\", \"water\", \"body_temperature\"};\r\n    private final long DELAY_MS = 500;\r\n    private final long PERIOD_MS = 3000;\r\n    private final int JOG_GOAL = 1000;\r\n\r\n    private ArrayList<Drawable> mList;\r\n    private ADScrollAdapter adScrollAdapter;\r\n    private CircleProgressBar circleProgressBar;\r\n    private ViewPager viewPager;\r\n    private Timer timer;\r\n\r\n    private boolean load = false;\r\n    private int water_count, walk_step, run_step;\r\n    private String txt_go_jog;\r\n\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.KITKAT)\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        final ViewGroup viewGroup = (ViewGroup) inflater.inflate(R.layout.fragment_home, container, false);\r\n        String packName = Objects.requireNonNull(this.getActivity()).getPackageName();\r\n\r\n        tv_calorie = viewGroup.findViewById(R.id.calory);\r\n        tv_menu = viewGroup.findViewById(R.id.tv_menu);\r\n        tv_water = viewGroup.findViewById(R.id.tv_water);\r\n        tv_temp = viewGroup.findViewById(R.id.tv_temp);\r\n        tv_bpm = viewGroup.findViewById(R.id.tv_bpm);\r\n        tv_go_jog = viewGroup.findViewById(R.id.go_jog);\r\n        tv_run_step = viewGroup.findViewById(R.id.tv_run_step);\r\n        tv_walk_step = viewGroup.findViewById(R.id.tv_walk_step);\r\n        tv_rest_time = viewGroup.findViewById(R.id.tv_rest_time);\r\n\r\n        listView = viewGroup.findViewById(R.id.drawer_menulist);\r\n        scrollView = viewGroup.findViewById(R.id.sv_main);\r\n\r\n        appbar = viewGroup.findViewById(R.id.appbar);\r\n        vp_layout = viewGroup.findViewById(R.id.vp_layout);\r\n        parent_layout = viewGroup.findViewById(R.id.parent_layout);\r\n        dog_running_time = viewGroup.findViewById(R.id.dog_running_time);\r\n        drawer_ad = viewGroup.findViewById(R.id.drawer);\r\n\r\n        btn_feedinput = viewGroup.findViewById(R.id.btn_feedinput);\r\n        btn_menu = viewGroup.findViewById(R.id.btn_menu);\r\n        circle_add = viewGroup.findViewById(R.id.circle_add);\r\n        circle_minus = viewGroup.findViewById(R.id.circle_minus);\r\n\r\n        viewPager = viewGroup.findViewById(R.id.viewPager);\r\n        circleProgressBar = viewGroup.findViewById(R.id.cpb_circlebar);\r\n\r\n        for (int i = 0; i < dogContentID.length; i++) {\r\n            String name = \"dog_\" + dogContentID[i];\r\n            int id = getResources().getIdentifier(name, \"id\", packName);\r\n            dogContent[i] = viewGroup.findViewById(id);\r\n        }\r\n\r\n        /*Initial Setting*/\r\n        settingData();\r\n\r\n        circle_add.setOnClickListener(new OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                water_count += 100;\r\n                tv_water.setText(Integer.toString(water_count));\r\n                PreferenceManager.setInt(getContext(), \"water_count\", water_count);\r\n            }\r\n        });\r\n        circle_minus.setOnClickListener(new OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (water_count != 0) {\r\n                    water_count -= 100;\r\n                    tv_water.setText(Integer.toString(water_count));\r\n                    PreferenceManager.setInt(getContext(), \"water_count\", water_count);\r\n                } else {\r\n                    tv_water.setText(\"0\");\r\n                    PreferenceManager.setInt(getContext(), \"water_count\", 0);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        //drawer 리스트 뷰\r\n        final String[] items = {\"블루투스 연결\"};\r\n        ArrayAdapter adapter = new ArrayAdapter(getContext(), android.R.layout.simple_list_item_1, items);\r\n        listView.setAdapter(adapter);\r\n        listView.setOnItemClickListener(new ListView.OnItemClickListener() {\r\n            @SuppressLint(\"RtlHardcoded\")\r\n            @Override\r\n            public void onItemClick(AdapterView parent, View v, int position, long id) {\r\n                switch (position) {\r\n                    case 0:\r\n\r\n                        break;\r\n                }\r\n                // close drawer.\r\n                DrawerLayout drawer = viewGroup.findViewById(R.id.drawer);\r\n                drawer.closeDrawer(Gravity.LEFT);\r\n            }\r\n        });\r\n\r\n\r\n        //drawer\r\n        btn_menu.setOnClickListener(new OnClickListener() {\r\n            @SuppressLint(\"RtlHardcoded\")\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (!drawer_ad.isDrawerOpen(Gravity.LEFT)) {\r\n                    drawer_ad.openDrawer(Gravity.LEFT);\r\n                }\r\n                if (drawer_ad.isDrawerOpen(Gravity.LEFT)) {\r\n                    drawer_ad.closeDrawer(Gravity.LEFT);\r\n                }\r\n            }\r\n        });\r\n\r\n        //광고창\r\n        mList = new ArrayList<>();\r\n        mList.add(ResourcesCompat.getDrawable(getResources(), R.drawable.img_ad1, null));\r\n        mList.add(ResourcesCompat.getDrawable(getResources(), R.drawable.img_ad2, null));\r\n        mList.add(ResourcesCompat.getDrawable(getResources(), R.drawable.img_ad3, null));\r\n        mList.add(ResourcesCompat.getDrawable(getResources(), R.drawable.img_ad4, null));\r\n        adScrollAdapter = new ADScrollAdapter(getContext(), mList);\r\n        viewPager.setAdapter(adScrollAdapter);\r\n\r\n        final Handler handler = new Handler();\r\n        final Runnable Update = new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                if (load) {\r\n                    if (viewPager.getCurrentItem() == adScrollAdapter.getCount() - 1) {\r\n                        viewPager.setCurrentItem(0, true);\r\n                    } else {\r\n                        viewPager.setCurrentItem(viewPager.getCurrentItem() + 1, true);\r\n                    }\r\n                } else {\r\n                    load = true;\r\n                    viewPager.setCurrentItem(0, true);\r\n                }\r\n            }\r\n\r\n        };\r\n        timer = new Timer();\r\n        timer.schedule(new TimerTask() {\r\n            @Override\r\n            public void run() {\r\n                handler.post(Update);\r\n            }\r\n\r\n        }, DELAY_MS, PERIOD_MS);\r\n\r\n\r\n        scrollView.getViewTreeObserver().addOnScrollChangedListener(new ViewTreeObserver.OnScrollChangedListener() {\r\n            @Override\r\n            public void onScrollChanged() {\r\n                int scrollY = scrollView.getScrollY(); // For ScrollView\r\n                if (scrollY >= vp_layout.getBottom()) {\r\n                    appbar.setBackgroundColor(Color.parseColor(\"#E7D0C8\"));\r\n                    tv_menu.setVisibility(View.VISIBLE);\r\n                    btn_menu.setColorFilter(Color.parseColor(\"#000000\"));\r\n                } else {\r\n                    appbar.setBackgroundColor(Color.parseColor(\"#00E7D0C8\"));\r\n                    tv_menu.setVisibility(View.INVISIBLE);\r\n                    btn_menu.setColorFilter(Color.parseColor(\"#FFFFFF\"));\r\n                }\r\n            }\r\n        });\r\n\r\n        //사료\r\n        btn_feedinput.setOnClickListener(new OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                final double curCal;\r\n                if (tv_calorie.getText().toString() == null) {\r\n                    curCal = 0;\r\n                } else {\r\n                    curCal = Double.parseDouble(tv_calorie.getText().toString());\r\n                }\r\n                AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\r\n\r\n                View view = LayoutInflater.from(getContext()).inflate(R.layout.dialog_food, null, false);\r\n                builder.setView(view);\r\n\r\n                final RadioGroup mRadioGroup;\r\n                final RadioButton radioButtonFood, radioButtonSnack;\r\n                final EditText editTextInputFeed;\r\n                final Button btnPlus100, btnPlus10, btnPlus1, btnMinus100, btnMinus10, btnMinus1;\r\n                final EditText editTextInputCal;\r\n                final Button btnApply, btnCancel;\r\n                final boolean isFood;\r\n\r\n                mRadioGroup = view.findViewById(R.id.radiocategory);\r\n                radioButtonFood = view.findViewById(R.id.radiofood);\r\n                radioButtonSnack = view.findViewById(R.id.radiosnack);\r\n                editTextInputFeed = view.findViewById(R.id.input_feed);\r\n                btnPlus100 = view.findViewById(R.id.btn_plus100);\r\n                btnPlus10 = view.findViewById(R.id.btn_plus10);\r\n                btnPlus1 = view.findViewById(R.id.btn_plus1);\r\n                btnMinus100 = view.findViewById(R.id.btn_minus100);\r\n                btnMinus10 = view.findViewById(R.id.btn_minus10);\r\n                btnMinus1 = view.findViewById(R.id.btn_minus1);\r\n                editTextInputCal = view.findViewById(R.id.input_calorie);\r\n                btnApply = view.findViewById(R.id.btn_apply);\r\n                btnCancel = view.findViewById(R.id.btn_cancel);\r\n\r\n                RadioGroup.OnCheckedChangeListener radioGroupButtonChangeListener = new RadioGroup.OnCheckedChangeListener() {\r\n                    @Override\r\n                    public void onCheckedChanged(RadioGroup group, @IdRes int checkedId) {\r\n\r\n                    }\r\n                };\r\n                mRadioGroup.setOnCheckedChangeListener(radioGroupButtonChangeListener);\r\n                radioButtonFood.setChecked(true);\r\n\r\n                final AlertDialog alertDialog = builder.create();\r\n                alertDialog.show();\r\n\r\n                btnPlus100.setOnClickListener(new OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        Double curInputFeed = Double.parseDouble(editTextInputFeed.getText().toString());\r\n                        curInputFeed += 100;\r\n                        editTextInputFeed.setText(String.valueOf(curInputFeed));\r\n                    }\r\n                });\r\n                btnPlus10.setOnClickListener(new OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        Double curInputFeed = Double.parseDouble(editTextInputFeed.getText().toString());\r\n                        curInputFeed += 10;\r\n                        editTextInputFeed.setText(String.valueOf(curInputFeed));\r\n                    }\r\n                });\r\n                btnPlus1.setOnClickListener(new OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        Double curInputFeed = Double.parseDouble(editTextInputFeed.getText().toString());\r\n                        curInputFeed += 1;\r\n                        editTextInputFeed.setText(String.valueOf(curInputFeed));\r\n                    }\r\n                });\r\n                btnMinus100.setOnClickListener(new OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        Double curInputFeed = Double.parseDouble(editTextInputFeed.getText().toString());\r\n                        curInputFeed -= 100;\r\n                        editTextInputFeed.setText(String.valueOf(curInputFeed));\r\n                    }\r\n                });\r\n                btnMinus10.setOnClickListener(new OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        Double curInputFeed = Double.parseDouble(editTextInputFeed.getText().toString());\r\n                        curInputFeed -= 10;\r\n                        editTextInputFeed.setText(String.valueOf(curInputFeed));\r\n                    }\r\n                });\r\n                btnMinus1.setOnClickListener(new OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        Double curInputFeed = Double.parseDouble(editTextInputFeed.getText().toString());\r\n                        curInputFeed -= 1;\r\n                        editTextInputFeed.setText(String.valueOf(curInputFeed));\r\n                    }\r\n                });\r\n\r\n                btnCancel.setOnClickListener(new OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        alertDialog.dismiss();\r\n                    }\r\n                });\r\n\r\n                btnApply.setOnClickListener(new OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        int checkedRadio = mRadioGroup.getCheckedRadioButtonId();\r\n                        double inputCalorie = Double.parseDouble(editTextInputCal.getText().toString());\r\n                        double calculatedCalorie = inputCalorie / 100;\r\n                        double inputFeed = Double.parseDouble(editTextInputFeed.getText().toString());\r\n                        double finalFeed = inputFeed * calculatedCalorie;\r\n                        tv_calorie.setText(String.format(\"%.2f\", finalFeed + curCal));\r\n                        alertDialog.dismiss();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n        return viewGroup;\r\n    }\r\n\r\n    @Override\r\n    public void onPause() {\r\n        super.onPause();\r\n        timer.cancel();\r\n    }\r\n\r\n    public void settingData(){\r\n        String rest_time;\r\n        int h, m, s;\r\n        int rest_data = PreferenceManager.getInt(getContext(), \"rest_time\");\r\n        h = rest_data / 60 / 60;\r\n        m = (rest_data - 60 * h) / 60;\r\n        s = rest_data - (60 * 60 * h) - (60 * m);\r\n        rest_time = h + \"시간\" + m + \"분\" + s + \"초\";\r\n        System.out.println(rest_data+\"  \"+rest_time);\r\n\r\n        water_count = PreferenceManager.getInt(getContext(), \"water_count\");\r\n        run_step = PreferenceManager.getInt(getContext(), \"run_step\");\r\n        walk_step = PreferenceManager.getInt(getContext(), \"walk_step\");\r\n\r\n        tv_water.setText(Integer.toString(water_count));\r\n        tv_temp.setText(String.valueOf(PreferenceManager.getFloat(getContext(), \"Temperature\")));\r\n        tv_bpm.setText(PreferenceManager.getString(getContext(), \"bpm\"));\r\n        tv_rest_time.setText(rest_time);\r\n\r\n        if ((run_step + walk_step) > 1) {\r\n            txt_go_jog = (run_step + walk_step) + \"/\"+ JOG_GOAL +\"걸음\";\r\n            tv_go_jog.setText(txt_go_jog);\r\n            circleProgressBar.setProgress((run_step + walk_step) * 100 / JOG_GOAL);\r\n            dog_running_time.setVisibility(View.VISIBLE);\r\n            int sumStep = run_step + walk_step;\r\n            int run_percent = run_step * 100 / sumStep;\r\n            int walk_percent = 100 - run_percent;\r\n            String run_text = run_percent + \"%\";\r\n            String walk_text = walk_percent + \"%\";\r\n            LinearLayout.LayoutParams param_run = (LinearLayout.LayoutParams) tv_run_step.getLayoutParams();\r\n            LinearLayout.LayoutParams param_walk = (LinearLayout.LayoutParams) tv_walk_step.getLayoutParams();\r\n            if (walk_percent > 30 && run_percent > 30) {\r\n                tv_run_step.setText(run_text);\r\n                tv_walk_step.setText(walk_text);\r\n            }else if (walk_percent < run_percent){\r\n                tv_run_step.setText(run_text);\r\n            }else{\r\n                tv_walk_step.setText(walk_text);\r\n            }\r\n            param_run.weight = run_percent;\r\n            param_walk.weight = walk_percent;\r\n            tv_run_step.setLayoutParams(param_run);\r\n            tv_walk_step.setLayoutParams(param_walk);\r\n        }else {\r\n            dog_running_time.setVisibility(View.GONE);\r\n        }\r\n\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/app_anima/FragmentHome.java	(revision 8b50730a5613980e24d3e291b7ca74d91d2a3963)
+++ app/src/main/java/com/example/app_anima/FragmentHome.java	(date 1611612657981)
@@ -354,7 +354,7 @@
     public void settingData(){
         String rest_time;
         int h, m, s;
-        int rest_data = PreferenceManager.getInt(getContext(), "rest_time");
+        int rest_data = PreferenceManager.getInt(getActivity(), "rest_time");
         h = rest_data / 60 / 60;
         m = (rest_data - 60 * h) / 60;
         s = rest_data - (60 * 60 * h) - (60 * m);
